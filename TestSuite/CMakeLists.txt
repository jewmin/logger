# cmake版本
CMAKE_MINIMUM_REQUIRED(VERSION 3.7.2)

# 项目名
PROJECT(test_suite VERSION 1.0)

# 添加源文件
SET(test_srcs
	${PROJECT_SOURCE_DIR}/Main.cc
	${PROJECT_SOURCE_DIR}/MutexTest.cc
	${PROJECT_SOURCE_DIR}/ConfigureFailureTest.cc
	${PROJECT_SOURCE_DIR}/StringUtilTest.cc
	${PROJECT_SOURCE_DIR}/TimeStampTest.cc
	${PROJECT_SOURCE_DIR}/LocalTimeTest.cc
	${PROJECT_SOURCE_DIR}/PriorityTest.cc
	${PROJECT_SOURCE_DIR}/AppenderTest.cc
	${PROJECT_SOURCE_DIR}/CategoryTest.cc
	${PROJECT_SOURCE_DIR}/LayoutTest.cc
	${PROJECT_SOURCE_DIR}/ThreadTest.cc
	${PROJECT_SOURCE_DIR}/FileAppenderTest.cc
)

# 生成可执行文件
ADD_EXECUTABLE(${PROJECT_NAME} ${test_srcs})
ADD_DEPENDENCIES(${PROJECT_NAME} gtest)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} logger ${GTEST_LIBRARIES})
IF(WINDOWS)
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${VLD_LIBRARIES})
	TARGET_COMPILE_DEFINITIONS(${PROJECT_NAME} PRIVATE USING_LOGGER_SHARED)
ENDIF()

ADD_EXECUTABLE(test_mutli ${PROJECT_SOURCE_DIR}/MainMutliThread.cc)
TARGET_LINK_LIBRARIES(test_mutli logger)
IF(WINDOWS)
	TARGET_LINK_LIBRARIES(test_mutli ${VLD_LIBRARIES})
	TARGET_COMPILE_DEFINITIONS(test_mutli PRIVATE USING_LOGGER_SHARED)
ENDIF()

ADD_EXECUTABLE(test_bench ${PROJECT_SOURCE_DIR}/MainBench.cc)
TARGET_LINK_LIBRARIES(test_bench logger)
IF(WINDOWS)
	TARGET_LINK_LIBRARIES(test_bench ${VLD_LIBRARIES})
	TARGET_COMPILE_DEFINITIONS(test_bench PRIVATE USING_LOGGER_SHARED)
ENDIF()